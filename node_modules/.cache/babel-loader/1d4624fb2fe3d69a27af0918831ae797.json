{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\tenzies\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport Die from \"./components/Die\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [dice, setDice] = React.useState(allNewDice());\n  let [tenzies, setTenzies] = React.useState(false);\n\n  function generateNewDie() {\n    return {\n      id: nanoid(),\n      value: Math.floor(Math.random() * 6),\n      isHeld: false\n    };\n  }\n\n  function allNewDice() {\n    let newDice = [];\n\n    for (let i = 0; i < 10; i++) {\n      newDice.push(generateNewDie());\n      console.log(newDice);\n    }\n\n    return newDice;\n  }\n\n  let diceElements = dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n    die: die,\n    holdDice: holdDice\n  }, die.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this));\n\n  function holdDice(clickedId) {\n    setDice(oldDice => oldDice.map(die => {\n      return die.id === clickedId ? { ...die,\n        isHeld: !die.isHeld\n      } : die;\n    }));\n  }\n\n  function rollDice(e) {\n    setDice(oldDice => oldDice.map(die => {\n      return die.isHeld ? die : generateNewDie();\n    }));\n  }\n\n  let firstDieValue = dice[0].value;\n  let isDone = dice.every(e => {\n    if (e.isHeld) {\n      return e.value === firstDieValue;\n    }\n\n    return false;\n  });\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tenzies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-container\",\n      children: diceElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: rollDice,\n      children: isDone ? \"play again\" : \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YgqwSIDfuzqg6GTd1nJMCZRKU0o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Die","nanoid","App","dice","setDice","useState","allNewDice","tenzies","setTenzies","generateNewDie","id","value","Math","floor","random","isHeld","newDice","i","push","console","log","diceElements","map","die","holdDice","clickedId","oldDice","rollDice","e","firstDieValue","isDone","every"],"sources":["D:/react/tenzies/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport Die from \"./components/Die\";\nimport {nanoid} from \"nanoid\"\n\nfunction App() {\n\n  let [dice, setDice] = React.useState(allNewDice())\n  let [tenzies, setTenzies] = React.useState(false)\n\n  function generateNewDie() {\n    return {\n      id: nanoid(),\n      value: Math.floor(Math.random() * 6),\n      isHeld: false,\n    }\n  }\n\n  function allNewDice() {\n    let newDice = []\n    for(let i = 0; i < 10; i++) {\n      newDice.push(generateNewDie())\n      console.log(newDice)\n    }\n    return newDice\n  }\n\n  let diceElements = dice.map(die => \n    <Die key={die.id} die={die} holdDice={holdDice} />\n  )\n\n  function holdDice(clickedId) {\n    setDice(oldDice => oldDice.map(die => {\n      return die.id === clickedId ? {...die, isHeld: !die.isHeld} : die\n    }))\n  }\n\n  function rollDice(e) {\n    setDice(oldDice => oldDice.map(die => {\n      return die.isHeld ? die : generateNewDie()\n    }))\n  }\n\n  let firstDieValue = dice[0].value\n\n  let isDone = dice.every((e) => {\n    if(e.isHeld) {\n      return e.value === firstDieValue\n    }\n    return false\n  })\n\n  return (\n    <main>\n      <h1>Tenzies</h1>\n      <p>Roll until all dice are the same. Click each die to freeze it at its current value between rolls.</p>\n      <div className=\"dice-container\">\n        {diceElements}\n      </div>\n      <button onClick={rollDice}>{isDone ? \"play again\" : \"Roll\"}</button>\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAAQC,MAAR,QAAqB,QAArB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,IAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBL,KAAK,CAACM,QAAN,CAAeC,UAAU,EAAzB,CAAtB;EACA,IAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBT,KAAK,CAACM,QAAN,CAAe,KAAf,CAA5B;;EAEA,SAASI,cAAT,GAA0B;IACxB,OAAO;MACLC,EAAE,EAAET,MAAM,EADL;MAELU,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAFF;MAGLC,MAAM,EAAE;IAHH,CAAP;EAKD;;EAED,SAAST,UAAT,GAAsB;IACpB,IAAIU,OAAO,GAAG,EAAd;;IACA,KAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA4B;MAC1BD,OAAO,CAACE,IAAR,CAAaT,cAAc,EAA3B;MACAU,OAAO,CAACC,GAAR,CAAYJ,OAAZ;IACD;;IACD,OAAOA,OAAP;EACD;;EAED,IAAIK,YAAY,GAAGlB,IAAI,CAACmB,GAAL,CAASC,GAAG,iBAC7B,QAAC,GAAD;IAAkB,GAAG,EAAEA,GAAvB;IAA4B,QAAQ,EAAEC;EAAtC,GAAUD,GAAG,CAACb,EAAd;IAAA;IAAA;IAAA;EAAA,QADiB,CAAnB;;EAIA,SAASc,QAAT,CAAkBC,SAAlB,EAA6B;IAC3BrB,OAAO,CAACsB,OAAO,IAAIA,OAAO,CAACJ,GAAR,CAAYC,GAAG,IAAI;MACpC,OAAOA,GAAG,CAACb,EAAJ,KAAWe,SAAX,GAAuB,EAAC,GAAGF,GAAJ;QAASR,MAAM,EAAE,CAACQ,GAAG,CAACR;MAAtB,CAAvB,GAAuDQ,GAA9D;IACD,CAFkB,CAAZ,CAAP;EAGD;;EAED,SAASI,QAAT,CAAkBC,CAAlB,EAAqB;IACnBxB,OAAO,CAACsB,OAAO,IAAIA,OAAO,CAACJ,GAAR,CAAYC,GAAG,IAAI;MACpC,OAAOA,GAAG,CAACR,MAAJ,GAAaQ,GAAb,GAAmBd,cAAc,EAAxC;IACD,CAFkB,CAAZ,CAAP;EAGD;;EAED,IAAIoB,aAAa,GAAG1B,IAAI,CAAC,CAAD,CAAJ,CAAQQ,KAA5B;EAEA,IAAImB,MAAM,GAAG3B,IAAI,CAAC4B,KAAL,CAAYH,CAAD,IAAO;IAC7B,IAAGA,CAAC,CAACb,MAAL,EAAa;MACX,OAAOa,CAAC,CAACjB,KAAF,KAAYkB,aAAnB;IACD;;IACD,OAAO,KAAP;EACD,CALY,CAAb;EAOA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAK,SAAS,EAAC,gBAAf;MAAA,UACGR;IADH;MAAA;MAAA;MAAA;IAAA,QAHF,eAME;MAAQ,OAAO,EAAEM,QAAjB;MAAA,UAA4BG,MAAM,GAAG,YAAH,GAAkB;IAApD;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GAzDQ5B,G;;KAAAA,G;AA2DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}