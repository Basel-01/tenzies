{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\tenzies\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport Die from \"./components/Die\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [dice, setDice] = React.useState(allNewDice());\n\n  function allNewDice() {\n    let newDice = [];\n\n    for (let i = 0; i < 10; i++) {\n      let die = {\n        value: Math.floor(Math.random() * 6),\n        isHeld: false,\n        id: i + 1\n      };\n      newDice.push(die);\n    }\n\n    return newDice;\n  }\n\n  let diceElements = dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n    die: die,\n    handleClick: dieClick\n  }, die.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 38\n  }, this));\n\n  function dieClick(clickedId) {\n    let myArray = [];\n\n    for (let i = 0; i < 10; i++) {\n      if (dice[i].id === clickedId) {\n        dice[i].isHeld = !dice[i].isHeld;\n        myArray.push(dice[i]);\n      } else {\n        myArray.push(dice[i]);\n      }\n    }\n\n    setDice(myArray);\n  }\n\n  function rollDice(e) {\n    if (e.target.innerHTML === \"Roll\") {\n      let myArray = [];\n      dice.forEach(e => {\n        if (e.isHeld) {\n          myArray.push(e);\n        } else {\n          e.value = Math.floor(Math.random() * 6);\n          myArray.push(e);\n        }\n      });\n      setDice(myArray);\n    } else {\n      setDice(allNewDice());\n    }\n  }\n\n  let firstDieValue = dice[0].value;\n  let isDone = dice.every(e => {\n    if (e.isHeld) {\n      return e.value === firstDieValue;\n    }\n\n    return false;\n  });\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tenzies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-container\",\n      children: diceElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: rollDice,\n      children: isDone ? \"play again\" : \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"FBcbDbTSXYNs4QNsRKPH911OvUI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Die","App","dice","setDice","useState","allNewDice","newDice","i","die","value","Math","floor","random","isHeld","id","push","diceElements","map","dieClick","clickedId","myArray","rollDice","e","target","innerHTML","forEach","firstDieValue","isDone","every"],"sources":["D:/react/tenzies/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport Die from \"./components/Die\";\n\nfunction App() {\n\n  let [dice, setDice] = React.useState(allNewDice())\n\n  function allNewDice() {\n    let newDice = []\n    for(let i = 0; i < 10; i++) {\n      let die = {\n        value: Math.floor(Math.random() * 6),\n        isHeld: false,\n        id: i+1\n      }\n      newDice.push(die)\n    }\n    return newDice\n  }\n\n  let diceElements = dice.map(die => <Die key={die.id} die={die} handleClick={dieClick} />)\n\n  function dieClick(clickedId) {\n    let myArray = []\n    for(let i = 0; i < 10; i++) {\n      if(dice[i].id === clickedId) {\n        dice[i].isHeld = !dice[i].isHeld\n        myArray.push(dice[i])\n      } else {\n        myArray.push(dice[i])\n      }\n    }\n    setDice(myArray)\n  }\n\n  function rollDice(e) {\n    if(e.target.innerHTML === \"Roll\") {\n      let myArray = []\n      dice.forEach(e => {\n        if(e.isHeld) {\n          myArray.push(e)\n        } else {\n          e.value =Math.floor(Math.random() * 6)\n          myArray.push(e)\n        }\n      })\n      setDice(myArray)\n    }\n    else {\n      setDice(allNewDice())\n    }\n  }\n\n  let firstDieValue = dice[0].value\n\n  let isDone = dice.every((e) => {\n    if(e.isHeld) {\n      return e.value === firstDieValue\n    }\n    return false\n  })\n\n  return (\n    <main>\n      <h1>Tenzies</h1>\n      <p>Roll until all dice are the same. Click each die to freeze it at its current value between rolls.</p>\n      <div className=\"dice-container\">\n        {diceElements}\n      </div>\n      <button onClick={rollDice}>{isDone ? \"play again\" : \"Roll\"}</button>\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,IAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,KAAK,CAACK,QAAN,CAAeC,UAAU,EAAzB,CAAtB;;EAEA,SAASA,UAAT,GAAsB;IACpB,IAAIC,OAAO,GAAG,EAAd;;IACA,KAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA4B;MAC1B,IAAIC,GAAG,GAAG;QACRC,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CADC;QAERC,MAAM,EAAE,KAFA;QAGRC,EAAE,EAAEP,CAAC,GAAC;MAHE,CAAV;MAKAD,OAAO,CAACS,IAAR,CAAaP,GAAb;IACD;;IACD,OAAOF,OAAP;EACD;;EAED,IAAIU,YAAY,GAAGd,IAAI,CAACe,GAAL,CAAST,GAAG,iBAAI,QAAC,GAAD;IAAkB,GAAG,EAAEA,GAAvB;IAA4B,WAAW,EAAEU;EAAzC,GAAUV,GAAG,CAACM,EAAd;IAAA;IAAA;IAAA;EAAA,QAAhB,CAAnB;;EAEA,SAASI,QAAT,CAAkBC,SAAlB,EAA6B;IAC3B,IAAIC,OAAO,GAAG,EAAd;;IACA,KAAI,IAAIb,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA4B;MAC1B,IAAGL,IAAI,CAACK,CAAD,CAAJ,CAAQO,EAAR,KAAeK,SAAlB,EAA6B;QAC3BjB,IAAI,CAACK,CAAD,CAAJ,CAAQM,MAAR,GAAiB,CAACX,IAAI,CAACK,CAAD,CAAJ,CAAQM,MAA1B;QACAO,OAAO,CAACL,IAAR,CAAab,IAAI,CAACK,CAAD,CAAjB;MACD,CAHD,MAGO;QACLa,OAAO,CAACL,IAAR,CAAab,IAAI,CAACK,CAAD,CAAjB;MACD;IACF;;IACDJ,OAAO,CAACiB,OAAD,CAAP;EACD;;EAED,SAASC,QAAT,CAAkBC,CAAlB,EAAqB;IACnB,IAAGA,CAAC,CAACC,MAAF,CAASC,SAAT,KAAuB,MAA1B,EAAkC;MAChC,IAAIJ,OAAO,GAAG,EAAd;MACAlB,IAAI,CAACuB,OAAL,CAAaH,CAAC,IAAI;QAChB,IAAGA,CAAC,CAACT,MAAL,EAAa;UACXO,OAAO,CAACL,IAAR,CAAaO,CAAb;QACD,CAFD,MAEO;UACLA,CAAC,CAACb,KAAF,GAASC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAT;UACAQ,OAAO,CAACL,IAAR,CAAaO,CAAb;QACD;MACF,CAPD;MAQAnB,OAAO,CAACiB,OAAD,CAAP;IACD,CAXD,MAYK;MACHjB,OAAO,CAACE,UAAU,EAAX,CAAP;IACD;EACF;;EAED,IAAIqB,aAAa,GAAGxB,IAAI,CAAC,CAAD,CAAJ,CAAQO,KAA5B;EAEA,IAAIkB,MAAM,GAAGzB,IAAI,CAAC0B,KAAL,CAAYN,CAAD,IAAO;IAC7B,IAAGA,CAAC,CAACT,MAAL,EAAa;MACX,OAAOS,CAAC,CAACb,KAAF,KAAYiB,aAAnB;IACD;;IACD,OAAO,KAAP;EACD,CALY,CAAb;EAOA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAK,SAAS,EAAC,gBAAf;MAAA,UACGV;IADH;MAAA;MAAA;MAAA;IAAA,QAHF,eAME;MAAQ,OAAO,EAAEK,QAAjB;MAAA,UAA4BM,MAAM,GAAG,YAAH,GAAkB;IAApD;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GArEQ1B,G;;KAAAA,G;AAuET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}